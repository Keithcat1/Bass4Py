from typing import Optional, Union

from .._evaluable import _Evaluable
from ..constants import ALGORITHM_3D
from .input_device import InputDevice
from .output_device import OutputDevice
from .plugin import Plugin
from .version import Version

class BASS(_Evaluable):

  def __init__(self) -> None: ...
  def get_input_device(self, device: int = ...) -> InputDevice: ...
  def get_output_device(self, device: int = ...) -> OutputDevice: ...
  def load_plugin(self, filename: Union[str, bytes]) -> Plugin: ...
  def update(self, length: int) -> bool: ...
  
  @property
  def version(self) -> Version: ...
  
  @property
  def api_version(self) -> Version: ...

  @property
  def cpu(self) -> float: ...
  
  @property
  def device(self) -> Optional[OutputDevice]: ...
  
  @property
  def net_agent(self) -> str: ...
  
  @net_agent.setter
  def net_agent(self, value: Union[str, bytes]) -> None: ...
  
  @property
  def net_proxy(self) -> Optional[str]: ...
  
  @net_proxy.setter
  def net_proxy(self, value: Optional[Union[str, bytes]]) -> None: ...
  
  @property
  def algorithm_3d(self) -> ALGORITHM_3D: ...
  
  @algorithm_3d.setter
  def algorithm_3d(self, value: ALGORITHM_3D) -> None: ...
  
  @property
  def async_buffer(self) -> int: ...
  
  @async_buffer.setter
  def async_buffer(self, value: int) -> None: ...
  
  @property
  def buffer(self) -> int: ...
  
  @buffer.setter
  def buffer(self, value: int) -> None: ...
  
  @property
  def curve_volume(self) -> bool: ...
  
  @curve_volume.setter
  def curve_volume(self, value: bool) -> None: ...
  
  @property
  def curve_pan(self) -> bool: ...
  
  @curve_pan.setter
  def curve_pan(self, value: bool) -> None: ...
  
  @property
  def device_buffer(self) -> int: ...
  
  @device_buffer.setter
  def device_buffer(self, value: int) -> None: ...
  
  @property
  def default_device(self) -> bool: ...
  
  @default_device.setter
  def default_device(self, value: bool) -> None: ...
  
  @property
  def float_dsp(self) -> bool: ...
  
  @float_dsp.setter
  def float_dsp(self, value: bool) -> None: ...
  
  @property
  def music_volume(self) -> int: ...
  
  @music_volume.setter
  def music_volume(self, value: int) -> None: ...
  
  @property
  def sample_volume(self) -> int: ...
  
  @sample_volume.setter
  def sample_volume(self, value: int) -> None: ...
  
  @property
  def stream_volume(self) -> int: ...
  
  @stream_volume.setter
  def stream_volume(self, value: int) -> None: ...
  
  @property
  def video(self) -> bool: ...
  
  @video.setter
  def video(self, value: bool) -> None: ...
  
  @property
  def virtual_channels(self) -> int: ...
  
  @virtual_channels.setter
  def virtual_channels(self, value: int) -> None: ...
  
  @property
  def net_buffer(self) -> int: ...
  
  @net_buffer.setter
  def net_buffer(self, value: int) -> None: ...
  
  @property
  def net_passive(self) -> bool: ...
  
  @net_passive.setter
  def net_passive(self, value: bool) -> None: ...
  
  @property
  def net_playlist(self) -> int: ...
  
  @net_playlist.setter
  def net_playlist(self, value: int) -> None: ...
  
  @property
  def net_playlist_depth(self) -> int: ...
  
  @net_playlist_depth.setter
  def net_playlist_depth(self, value: int) -> None: ...
  
  @property
  def net_prebuf(self) -> int: ...
  
  @net_prebuf.setter
  def net_prebuf(self, value: int) -> None: ...
  
  @property
  def net_prebuf_wait(self) -> bool: ...
  
  @net_prebuf_wait.setter
  def net_prebuf_wait(self, value: bool) -> None: ...
  
  @property
  def net_timeout(self) -> int: ...
  
  @net_timeout.setter
  def net_timeout(self, value: int) -> None: ...
  
  @property
  def net_read_timeout(self) -> int: ...
  
  @net_read_timeout.setter
  def net_read_timeout(self, value: int) -> None: ...
  
  @property
  def ogg_prescan(self) -> bool: ...
  
  @ogg_prescan.setter
  def ogg_prescan(self, value: bool) -> None: ...
  
  @property
  def pause_noplay(self) -> bool: ...
  
  @pause_noplay.setter
  def pause_noplay(self, value: bool) -> None: ...
  
  @property
  def record_buffer(self) -> int: ...
  
  @record_buffer.setter
  def record_buffer(self, value: int) -> None: ...
  
  @property
  def src(self) -> int: ...
  
  @src.setter
  def src(self, value: int) -> None: ...
  
  @property
  def src_sample(self) -> int: ...
  
  @src_sample.setter
  def src_sample(self, value: int) -> None: ...
  
  @property
  def update_period(self) -> int: ...
  
  @update_period.setter
  def update_period(self, value: int) -> None: ...
  
  @property
  def update_threads(self) -> int: ...
  
  @update_threads.setter
  def update_threads(self, value: int) -> None: ...
  
  @property
  def verify(self) -> int: ...
  
  @verify.setter
  def verify(self, value: int) -> None: ...
  
  @property
  def net_verify(self) -> int: ...
  
  @net_verify.setter
  def net_verify(self, value: int) -> None: ...
  
  @property
  def vista_speakers(self) -> bool: ...
  
  @vista_speakers.setter
  def vista_speakers(self, value: bool) -> None: ...
  
  @property
  def vista_truepos(self) -> bool: ...
  
  @vista_truepos.setter
  def vista_truepos(self, value: bool) -> None: ...
  
  @property
  def device_update_period(self) -> int: ...
  
  @device_update_period.setter
  def device_update_period(self, value: int) -> None: ...
  
  @property
  def handles(self) -> int: ...
  
  @property
  def wasapi_persist(self) -> bool: ...
  
  @wasapi_persist.setter
  def wasapi_persist(self, value: bool) -> None: ...
  
  @property
  def lib_ssl(self) -> str: ...
  
  @lib_ssl.setter
  def lib_ssl(self, value: Union[str, bytes]) -> None: ...
