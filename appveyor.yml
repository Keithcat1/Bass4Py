version: "{build}"
build: off
environment:
  matrix:
    - APPVEYOR_BUILD_WORKER_IMAGE: Ubuntu
      PYTHON: "python2"
      STACK: "2.7"
    - APPVEYOR_BUILD_WORKER_IMAGE: Ubuntu
      PYTHON: "python3"
      STACK: "3.5"
    - APPVEYOR_BUILD_WORKER_IMAGE: Ubuntu
      PYTHON: "python3"
      STACK: "3.6"
    - APPVEYOR_BUILD_WORKER_IMAGE: Ubuntu
      PYTHON: "python3"
      STACK: "3.7"
    - APPVEYOR_BUILD_WORKER_IMAGE: Ubuntu
      PYTHON: "python3"
      STACK: "3.8"
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
      PYTHON: "C:\\Python27"
      PYTHON_VERSION: "2.7"
      PYTHON_ARCH: "32"
      STACK: "2.7"
      BASSLIB: "bass24"
      TAGSLIB: "tags18"
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
      PYTHON: "C:\\Python27-x64"
      PYTHON_VERSION: "2.7"
      PYTHON_ARCH: "64"
      STACK: "2.7"
      BASSLIB: "bass24\\x64"
      TAGSLIB: "tags18"
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
      PYTHON: "C:\\Python38"
      PYTHON_VERSION: "3.8"
      PYTHON_ARCH: "32"
      STACK: "3.8"
      BASSLIB: "bass24"
      TAGSLIB: "tags18"
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
      PYTHON: "C:\\Python38-x64"
      PYTHON_VERSION: "3.8"
      PYTHON_ARCH: "64"
      STACK: "3.8"
      BASSLIB: "bass24\\x64"
      TAGSLIB: "tags18"
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
      PYTHON: "C:\\Python37"
      PYTHON_VERSION: "3.7"
      PYTHON_ARCH: "32"
      STACK: "3.7"
      BASSLIB: "bass24"
      TAGSLIB: "tags18"
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
      PYTHON: "C:\\Python37-x64"
      PYTHON_VERSION: "3.7"
      PYTHON_ARCH: "64"
      STACK: "3.7"
      BASSLIB: "bass24\\x64"
      TAGSLIB: "tags18"
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
      PYTHON: "C:\\Python36"
      PYTHON_VERSION: "3.6"
      PYTHON_ARCH: "32"
      STACK: "3.6"
      BASSLIB: "bass24"
      TAGSLIB: "tags18"
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
      PYTHON: "C:\\Python36-x64"
      PYTHON_VERSION: "3.6"
      PYTHON_ARCH: "64"
      STACK: "3.6"
      BASSLIB: "bass24\\x64"
      TAGSLIB: "tags18"
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
      PYTHON: "C:\\Python35"
      PYTHON_VERSION: "3.5"
      PYTHON_ARCH: "32"
      STACK: "3.5"
      BASSLIB: "bass24"
      TAGSLIB: "tags18"
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
      PYTHON: "C:\\Python35-x64"
      PYTHON_VERSION: "3.5"
      PYTHON_ARCH: "64"
      STACK: "3.5"
      BASSLIB: "bass24\\x64"
      TAGSLIB: "tags18"
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
      PYTHON: "C:\\Python27"
      PYTHON_VERSION: "2.7"
      PYTHON_ARCH: "32"
      STACK: "2.7"
      BASSLIB: "bass24"
      TAGSLIB: "tags18"
      SDIST_ONLY: 1

stack: python %STACK%

before_build:
  - ps: |
      if($isWindows)
      {
        $wc = New-Object System.Net.WebClient
        $wc.DownloadFile("http://www.un4seen.com/files/bass24.zip", (Join-Path ($pwd).path "bass24.zip"))
        $wc.DownloadFile("http://www.un4seen.com/files/z/3/tags18.zip", (Join-Path ($pwd).path "tags18.zip"))
        & 7z --% x bass24.zip -obass24 -r
        & 7z --% x tags18.zip -otags18 -r
      } else {
        & wget http://www.un4seen.com/files/bass24-linux.zip
        & wget http://www.un4seen.com/files/z/3/tags18-linux.zip
        & 7z --% x bass24-linux.zip -obass24-linux -r
        & 7z --% x tags18-linux.zip -otags18-linux -r
      }
      
install:
  - ps: |
      if($isWindows)
      {
        $version = &"$($env:PYTHON)\python.exe" -c --% "from Bass4Py import __version__; import sys; _ = sys.stdout.write(__version__)"
      } else {
        $version = & $($env:PYTHON) -c --% "from Bass4Py import __version__; import sys; _ = sys.stdout.write(__version__)"
      }
      Update-AppveyorBuild -Version "$($version)+$($env:APPVEYOR_BUILD_NUMBER)"
  - cmd: |
      %PYTHON%\python.exe --version
      %PYTHON%\Scripts\pip.exe --version
      %PYTHON%\python.exe -m pip install -r requirements-dev.txt
  - sh: |
      $PYTHON --version
      $PYTHON -m pip --version
      $PYTHON -m pip install -r requirements-dev.txt
build_script:
  - cmd: "
      IF [%SDIST_ONLY%]==[1] (
        %PYTHON%\\python.exe setup.py sdist
      ) ELSE (
        %PYTHON%\\python.exe setup.py build_ext --inplace &&
        %PYTHON%\\python.exe setup.py bdist_wheel
      )"
  - sh: |
      if [ -z ${SDIST_ONLY+x} ];
      then
        $PYTHON setup.py build_ext --inplace
        $PYTHON setup.py bdist_wheel
      else
        $PYTHON setup.py sdist
      fi

before_test:
  - sh: |
      export LD_LIBRARY_PATH=$(pwd)/bass24-linux/x64/:$(pwd)/tags18-linux/x64/
  - cmd: |
      set PATH=%cd%\%BASSLIB%;%cd%\%TAGSLIB%;%PATH%

test_script:
  - sh: |
      if [ -z ${SDIST_ONLY+x} ];
      then
        nose2 -X
      fi
  - cmd: |
      if not defined SDIST_ONLY %PYTHON%\Scripts\nose2.exe -X

on_finish:
  - ps: |
      $escapeparser = '--%'
      if (Test-Path "nose2-junit.xml")
      {
        if($isWindows)
        {
          $wc = New-Object 'System.Net.WebClient'
          $wc.UploadFile("https://ci.appveyor.com/api/testresults/junit/$($env:APPVEYOR_JOB_ID)", (Join-Path ($pwd).path "nose2-junit.xml"))
        } else {
          & curl $escapeparser -F "file=@nose2-junit.xml" "https://ci.appveyor.com/api/testresults/junit/$($env:APPVEYOR_JOB_ID)"
        }
      }

artifacts:
  - path: dist/*
